var searchIndex = {};
searchIndex['graphics'] = {"items":[[0,"","graphics","A library for 2D graphics that works with multiple back-ends."],[1,"BevelBorderLineColorContext","","A line context with bevel border information."],[11,"view","","View transform.",0],[11,"transform","","Current transform.",0],[11,"line","","Current line.",0],[11,"color","","Current color.",0],[11,"bevel_border_radius","","Current bevel border.",0],[1,"BevelBorderLineContext","","A line context with bevel border information."],[11,"view","","View transform.",1],[11,"transform","","Current transform.",1],[11,"line","","Current line.",1],[11,"bevel_border_radius","","Current bevel border.",1],[1,"BevelRectangleColorContext","","A rectangle color context."],[11,"view","","View transformation.",2],[11,"transform","","Current transformation.",2],[11,"rect","","Current rectangle.",2],[11,"bevel_radius","","Current bevel radius.",2],[11,"color","","Current color.",2],[1,"BevelRectangleContext","","A bevel rectangle context."],[11,"view","","View transform.",3],[11,"transform","","Current transform.",3],[11,"rect","","Current rectangle.",3],[11,"bevel_radius","","Current bevel radius.",3],[1,"ColorContext","","A context with color information."],[11,"view","","View transformation.",4],[11,"transform","","Current transformation.",4],[11,"color","","Current color.",4],[1,"Context","","Drawing 2d context."],[11,"view","","View transformation.",5],[11,"transform","","Current transformation.",5],[1,"EllipseContext","","An ellipse context."],[11,"view","","View transform.",6],[11,"transform","","Current transformation.",6],[11,"rect","","Current rectangle enclosing the ellipse.",6],[1,"EllipseColorContext","","An ellipse color context."],[11,"view","","View transformation.",7],[11,"transform","","Current transformation.",7],[11,"rect","","Current rectangle.",7],[11,"color","","Current color.",7],[1,"ImageRectangleContext","","An image rectangle context."],[11,"view","","View transformation.",8],[11,"transform","","Current transformation.",8],[11,"rect","","Current rectangle.",8],[11,"image","","Current image.",8],[11,"source_rect","","Current source rectangle.",8],[1,"ImageRectangleColorContext","","An image rectangle context."],[11,"view","","View transformation.",9],[11,"transform","","Current transformation.",9],[11,"rect","","Current rectangle.",9],[11,"image","","Current image.",9],[11,"source_rect","","Current source rectangle.",9],[11,"color","","Current color.",9],[1,"LerpTweenContext","","An animation inbetweening context."],[11,"view","","View transform.",10],[11,"transform","","Current transform.",10],[11,"tween_factor","","Animation inbetweening factor.",10],[1,"LerpTweenColorContext","","An animation inbetweening context with color."],[11,"view","","View transform.",11],[11,"transform","","Current transform.",11],[11,"color","","Current color.",11],[11,"tween_factor","","Animation inbetweening factor.",11],[1,"LerpTweenPolygonsContext","","An animation inbetweening context with color."],[11,"view","","View transform.",12],[11,"transform","","Current transform.",12],[11,"tween_factor","","Animation inbetweening factor.",12],[11,"polygons","","The animated polygons.",12],[1,"LerpTweenPolygonsColorContext","","An animation inbetweening context with color."],[11,"view","","View transform.",13],[11,"transform","","Current transform.",13],[11,"color","","Current color.",13],[11,"tween_factor","","Animation inbetweening factor.",13],[11,"polygons","","The animated polygons.",13],[1,"LineContext","","A line context."],[11,"view","","View transform.",14],[11,"transform","","Current transform.",14],[11,"line","","Current line.",14],[1,"LineColorContext","","A line context."],[11,"view","","View transform.",15],[11,"transform","","Current transform.",15],[11,"line","","Current line.",15],[11,"color","","Current color.",15],[1,"PolygonContext","","A polygon context."],[11,"view","","View transform.",16],[11,"transform","","Current transform.",16],[11,"polygon","","Current polygon.",16],[1,"PolygonColorContext","","A polygon color context."],[11,"view","","View transform.",17],[11,"transform","","Current transform.",17],[11,"color","","Current color.",17],[11,"polygon","","Current polygon.",17],[1,"RectangleContext","","A rectangle context."],[11,"view","","View transformation.",18],[11,"transform","","Current transformation.",18],[11,"rect","","Current rectangle.",18],[1,"RectangleColorContext","","A rectangle color context."],[11,"view","","View transformation.",19],[11,"transform","","Current transformation.",19],[11,"rect","","Current rectangle.",19],[11,"color","","Current color.",19],[1,"RoundBorderLineContext","","A line context with round border information."],[11,"view","","View transform.",20],[11,"transform","","Current transform.",20],[11,"line","","Current line.",20],[11,"round_border_radius","","Current round border.",20],[1,"RoundBorderLineColorContext","","A line context with round border information."],[11,"view","","View transform.",21],[11,"transform","","Current transform.",21],[11,"line","","Current line.",21],[11,"color","","Current color.",21],[11,"round_border_radius","","Current round border.",21],[1,"RoundRectangleContext","","A round rectangle context."],[11,"view","","View transform.",22],[11,"transform","","Current transform.",22],[11,"rect","","Current rectangle.",22],[11,"round_radius","","Current roundness radius.",22],[1,"RoundRectangleColorContext","","A rectangle color context."],[11,"view","","View transformation.",23],[11,"transform","","Current transformation.",23],[11,"rect","","Current rectangle.",23],[11,"round_radius","","Current roundness radius.",23],[11,"color","","Current color.",23],[1,"SquareBorderLineColorContext","","A line context with square border information."],[11,"view","","View transform.",24],[11,"transform","","Current transform.",24],[11,"line","","Current line.",24],[11,"color","","Current color.",24],[11,"square_border_radius","","Current square border.",24],[1,"SquareBorderLineContext","","A line context with square border information."],[11,"view","","View transform.",25],[11,"transform","","Current transform.",25],[11,"line","","Current line.",25],[11,"square_border_radius","","Current square border.",25],[2,"Field","","A structure that might contain a value or a borrowed value.\nThis is to used as building block to create data structure\nthat is partially based on an existing structure."],[12,"Value","","Contains a value.",26],[12,"Borrowed","","Contains a borrowed pointer.",26],[0,"internal","","Contains internal type aliases and traits."],[4,"Area","graphics::internal","The type used for area."],[4,"Color","","[red, green, blue, alpha]"],[4,"ColorComponent","","The type used for color component."],[4,"Line","","[x1, y1, x2, y2]"],[4,"Matrix2d","","[m00, m01, m02, m10, m11, m12]"],[4,"SourceRectangle","","[x, y, w, h]"],[4,"Polygon","","[x0, y0, x1, y1, ...]"],[4,"Polygons","","A slice of polygons."],[4,"Radius","","The type used for radius."],[4,"Ray","","[x, y, dir_x, dir_y]"],[4,"Rectangle","","[x, y, w, h]"],[4,"Scalar","","The type used for scalars."],[4,"Triangle","","[x1, y1, x2, y2, x3, y3]"],[4,"Vec2d","","[x, y]"],[4,"Width","","The type used for width."],[6,"CanColor","","Implemented by contexts that can color."],[9,"color","","Create a new context with color.",27],[6,"CanRectangle","","Implemented by contexts that can set rectangle information."],[9,"rectangle","","Create new context with rectangle information.",28],[6,"CanSourceRectangle","","Implemented by contexts that can set source rectangle information."],[9,"source_rectangle","","Create new context with source rectangle information.",29],[6,"CanTransform","","Implemented by contexts that can transform."],[9,"transform","","Create a new context with transformation.",30],[6,"CanViewTransform","","Implemented by contexts that can view transform."],[9,"view_transform","","Create a new context with view transformation.",31],[6,"HasColor","","Implemented by contexts that uses type `U` as current color."],[9,"get_color","","Returns the current color.",32],[6,"HasRectangle","","Implemented by contexts that uses type `U` as current rectangle."],[9,"get_rectangle","","Returns the current rectangle.",33],[6,"HasSourceRectangle","","Implemented by contexts that uses type `U` as current source rectangle."],[9,"get_source_rectangle","","Returns the current source rectangle.",34],[6,"HasTransform","","Implemented by contexts that uses type `U` as current transform."],[9,"get_transform","","Returns the current transform.",35],[6,"HasViewTransform","","Implemented by contexts that uses type `U` as current view transform."],[9,"get_view_transform","","Returns the current view transform.",36],[0,"interpolation","graphics","Interpolation algorithms."],[3,"lerp","graphics::interpolation","Performs linear interpolation.\nA linear interpolation consists of two states 'a' and 'b'.\nThe 't' variable is a factor between 0 and 1 that gives weight to 'a' or 'b'.\nWhen 't' is zero then 'a' has full weight.\nWhen 't' is one then 'b' has full weight."],[3,"lerp_2","","Performs linear interpolation on array of size 3."],[3,"lerp_3","","Performs linear interpolation on array of size 3."],[3,"lerp_4","","Performs linear interpolation on array of size 4."],[3,"lerp_5","","Performs linear interpolation on array of size 5."],[3,"quad_bez","","Performs quadratic beziér interpolation.\nThis is done by nesting linear interpolations.\nFor more information, see:"],[3,"cub_bez","","Performs cubic beziér interpolation.\nThis is done by interpolation between two quadratic beziér.\nFor more information, see:"],[0,"modular_index","graphics","Helper functions for computing modular index safely."],[3,"offset","graphics::modular_index","Computes modular offset safely for indices."],[3,"previous","","Computes previous modular index safely."],[3,"next","","Computes next modular index safely."],[0,"triangulation","graphics","Methods for converting shapes into triangles."],[3,"with_lerp_polygons_tri_list_xy_f32_rgba_f32","graphics::triangulation","Streams tweened polygons using linear interpolation."],[3,"with_ellipse_tri_list_xy_f32_rgba_f32","","Streams an ellipse specified by a resolution."],[3,"with_round_border_line_tri_list_xy_f32_rgba_f32","","Streams a round border line."],[3,"with_round_rectangle_tri_list_xy_f32_rgba_f32","","Streams a round rectangle."],[3,"stream_polygon_tri_list_xy_f32_rgba_f32","","Streams a polygon into tri list with color per vertex.\nUses buffers that fit inside L1 cache."],[3,"with_polygon_tri_list_xy_f32_rgba_f32","","Splits polygon into convex segments with one color per vertex.\nCreate a buffer that fits into L1 cache with 1KB overhead."],[3,"rect_tri_list_xy_f32","","Creates triangle list vertices from rectangle."],[3,"rect_tri_list_rgba_f32","","Creates triangle list colors from rectangle."],[3,"rect_tri_list_uv_f32","","Creates triangle list texture coords from image."],[0,"vecmath","graphics","Various methods for computing with vectors."],[3,"multiply","graphics::vecmath","Multiplies two matrices."],[3,"translate","","Creates a translation matrix."],[3,"rotate_radians","","Creates a rotation matrix."],[3,"orient","","Orients x axis to look at point."],[3,"scale","","Create a scale matrix."],[3,"shear","","Create a shear matrix."],[3,"identity","","Create an identity matrix."],[3,"get_scale","","Extract scale information from amtrix."],[3,"separation","","Compute the shortest vector from point to ray.\nA ray stores starting point and directional vector."],[3,"least_separation_4","","Returns the least separation out of four.\nEach seperation can be computed using `separation` function.\nThe separation returned can be used to solve collision of rectangles."],[3,"margin_rectangle","","Shrinks a rectangle by a factor on all sides."],[3,"relative_rectangle","","Computes a relative rectangle using the rectangle as a tile."],[3,"relative_source_rectangle","","Computes a relative source rectangle using the source rectangle as a tile."],[3,"modular_offset","","Computes modular offset safely for numbers."],[3,"area_centroid","","Computes the area and centroid of a simple polygon."],[3,"area","","Computes area of a simple polygon."],[3,"centroid","","Computes centroid of a simple polygon."],[3,"line_side","","Returns a number that tells which side it is relative to a line."],[3,"inside_triangle","","Returns true if point is inside triangle."],[3,"triangle_face","","Returns true if triangle is clockwise."],[3,"hsv","","Transform color with hue saturation and value."],[6,"AddBevel","graphics","Implemented by contexts that can make a shape bevel."],[9,"bevel","","Bevels the shape of the current context.",37],[6,"AddBevelBorder","","Implemented by contexts that can add round border."],[9,"bevel_border_radius","","Adds a bevel border radius.",38],[10,"bevel_border_width","","Adds a bevel border width.",38],[6,"AddColor","","Implemented by contexts who can add color."],[9,"rgba","","Add color with alpha channel.",39],[10,"rgb","","Adds color with alpha channel set to 1.0.",39],[10,"color","","Add color [r, g, b, a].",39],[10,"grey","","Adds a gray color.",39],[10,"alpha","","Adds a white semi-transparent color.",39],[6,"AddEllipse","","Implemented by all contexts that can add ellipse."],[9,"ellipse","","Adds an ellipse.",40],[10,"ellipse_centered","","Adds an ellipse with coordinates in the center.",40],[10,"circle","","Adds a circle.",40],[6,"AddImage","","Implemented by contexts that can add image."],[9,"image","","Add image to context.",41],[6,"AddLine","","Implemented by all contexts that can add rectangle."],[9,"line","","Adds a line.",42],[6,"AddPolygon","","Implemented by contexts who can add polygon."],[9,"polygon","","Add polygon.",43],[6,"AddPolygons","","Implemented by tweening contexts that can add polygons."],[9,"polygons","","Add polygons.",44],[6,"AddRectangle","","Implemented by all contexts that can add rectangle."],[9,"rect","","Adds a rectangle.",45],[10,"rect_centered","","Adds a rectangle with coordinates in the center.",45],[10,"square","","Adds a square with coordinates of upper left corner.",45],[10,"square_centered","","Adds a square with coordinates in the center.",45],[6,"AddRound","","Implemented by contexts that can make a shape rounder."],[9,"round","","Rounds the shape of the current context.",46],[6,"AddRoundBorder","","Implemented by contexts that can add round border."],[9,"round_border_radius","","Adds a round border radius.",47],[10,"round_border_width","","Adds a round border width.",47],[6,"AddSquareBorder","","Implemented by contexts that can add square border."],[9,"square_border_radius","","Adds a square border radius.",48],[10,"square_border_width","","Adds a square border width.",48],[6,"AddTween","","Implemented by contexts who can give an animated inbetweening context."],[9,"lerp","","Do linear interpolation.",49],[6,"BackEnd","","Implemented by all graphics back-ends.\nThis trait uses default methods to simplify implementation."],[10,"supports_clear_rgba","","Returns true if feature is supported.",50],[10,"clear_rgba","","Clears background with a color.",50],[10,"enable_alpha_blend","","Turns on alpha blending.",50],[10,"disable_alpha_blend","","Turns off alpha blending.",50],[10,"supports_single_texture","","Returns true if texture feature is supported.",50],[10,"enable_single_texture","","Sets the current single-texture.",50],[10,"disable_single_texture","","Disables single-texture.",50],[10,"has_texture_alpha","","Should return true if texture has alpha channel.",50],[10,"supports_tri_list_xy_f64_rgba_f32","","Returns true if feature is supported.",50],[10,"tri_list_xy_f64_rgba_f32","","Renders list of 2d triangles with color assigned per vertex.",50],[10,"supports_tri_list_xy_f32_rgba_f32","","Returns true if feature is supported.",50],[10,"tri_list_xy_f32_rgba_f32","","Renders list of 2d triangles with color assigned per vertex.",50],[10,"supports_tri_list_xy_f32_rgba_f32_uv_f32","","Returns true if feature is supported.",50],[10,"tri_list_xy_f32_rgba_f32_uv_f32","","Renders list of 2d triangles.",50],[6,"Clear","","Implemented by contexts that can clear the background."],[9,"clear","","Clears the background.",51],[6,"Draw","","Implemented by contexts that can draws something using a back-end."],[9,"draw","","Draw using back-end.",52],[6,"Fill","","Fills a shape using a back-end."],[9,"fill","","Fill shape using back-end.",53],[6,"Image","","Must be implemented by all images."],[9,"get_size","","Get the image size.",54],[6,"RelativeColor","","Implemented by contexts that contains color."],[9,"mul_rgba","","Multiplies with red, green, blue and alpha values.",55],[10,"tint","","Mixes the current color with white.",55],[10,"shade","","Mixes the current color with black.",55],[10,"hue_deg","","Rotates hue by degrees.",55],[9,"hue_rad","","Rotates hue by radians.",55],[6,"RelativeRectangle","","Should be implemented by contexts that have rectangle information."],[9,"margin","","Shrinks the current rectangle equally by all sides.",56],[10,"expand","","Expands the current rectangle equally by all sides.",56],[9,"rel","","Moves to a relative rectangle using the current rectangle as tile.",56],[6,"RelativeSourceRectangle","","Should be implemented by contexts that have source rectangle information."],[9,"src_rect","","Adds a source rectangle.",57],[9,"src_rel","","Moves to a relative source rectangle using the current source rectangle as tile.",57],[6,"RelativeTransform2d","","Implemented by contexts that can transform."],[9,"trans","","Translate x an y in local coordinates.",58],[10,"rot_deg","","Rotates degrees in local coordinates.",58],[9,"rot_rad","","Rotate radians in local coordinates.",58],[9,"orient","","Orients x axis to look at point locally.",58],[9,"scale","","Scales in local coordinates.",58],[10,"zoom","","Scales in both directions in local coordinates.",58],[10,"flip_v","","Flips vertically in local coordinates.",58],[10,"flip_h","","Flips horizontally in local coordinates.",58],[9,"shear","","Shears in local coordinates.",58],[6,"Stroke","","Strokes a shape using a back-end."],[9,"stroke","","Stroke shape using back-end.",59],[6,"View","","Should be implemented by contexts that draws something relative to view."],[9,"view","","Moves the current transform to the view coordinate system.",60],[9,"reset","","Moves the current transform to the default coordinate system.",60],[9,"store_view","","Stores the current transform as new view.",60],[9,"get_view_size","","Computes the current view size.",60],[10,"get","","Gets a read only value.",26]],"paths":[[1,"BevelBorderLineColorContext"],[1,"BevelBorderLineContext"],[1,"BevelRectangleColorContext"],[1,"BevelRectangleContext"],[1,"ColorContext"],[1,"Context"],[1,"EllipseContext"],[1,"EllipseColorContext"],[1,"ImageRectangleContext"],[1,"ImageRectangleColorContext"],[1,"LerpTweenContext"],[1,"LerpTweenColorContext"],[1,"LerpTweenPolygonsContext"],[1,"LerpTweenPolygonsColorContext"],[1,"LineContext"],[1,"LineColorContext"],[1,"PolygonContext"],[1,"PolygonColorContext"],[1,"RectangleContext"],[1,"RectangleColorContext"],[1,"RoundBorderLineContext"],[1,"RoundBorderLineColorContext"],[1,"RoundRectangleContext"],[1,"RoundRectangleColorContext"],[1,"SquareBorderLineColorContext"],[1,"SquareBorderLineContext"],[2,"Field"],[6,"CanColor"],[6,"CanRectangle"],[6,"CanSourceRectangle"],[6,"CanTransform"],[6,"CanViewTransform"],[6,"HasColor"],[6,"HasRectangle"],[6,"HasSourceRectangle"],[6,"HasTransform"],[6,"HasViewTransform"],[6,"AddBevel"],[6,"AddBevelBorder"],[6,"AddColor"],[6,"AddEllipse"],[6,"AddImage"],[6,"AddLine"],[6,"AddPolygon"],[6,"AddPolygons"],[6,"AddRectangle"],[6,"AddRound"],[6,"AddRoundBorder"],[6,"AddSquareBorder"],[6,"AddTween"],[6,"BackEnd"],[6,"Clear"],[6,"Draw"],[6,"Fill"],[6,"Image"],[6,"RelativeColor"],[6,"RelativeRectangle"],[6,"RelativeSourceRectangle"],[6,"RelativeTransform2d"],[6,"Stroke"],[6,"View"]]};
initSearch(searchIndex);
