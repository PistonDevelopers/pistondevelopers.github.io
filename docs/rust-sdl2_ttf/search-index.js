var searchIndex = {};
searchIndex['sdl2_ttf'] = {"items":[[0,"","sdl2_ttf","A binding for SDL2_ttf."],[1,"FontStyle","",""],[1,"GlyphMetrics","","Glyph Metrics"],[11,"minx","","",0],[11,"maxx","","",0],[11,"miny","","",0],[11,"maxy","","",0],[11,"advance","","",0],[1,"Font","","The opaque holder of a loaded font."],[2,"Hinting","",""],[12,"HintingNormal","","",1],[12,"HintingLight","","",1],[12,"HintingMono","","",1],[12,"HintingNone","","",1],[3,"get_linked_version","","Returns the version of the dynamically linked SDL_ttf library"],[3,"init","","Initialize the truetype font API."],[3,"was_inited","","Query the initilization status of the truetype font API."],[3,"quit","","Shutdown and cleanup the truetype font API."],[5,"StyleNormal","",""],[5,"StyleBold","",""],[5,"StyleItalic","",""],[5,"StyleUnderline","",""],[5,"StyleStrikeThrough","",""],[6,"LoaderRWops","","Loader trait for RWops"],[9,"load_font","","Load src for use as a font.",2],[9,"load_font_index","","Load src for use as a font.",2],[10,"hash","","",3],[10,"cmp","","",3],[10,"partial_cmp","","",3],[10,"lt","","",3],[10,"le","","",3],[10,"gt","","",3],[10,"ge","","",3],[10,"clone","","",3],[10,"eq","","",3],[10,"ne","","",3],[10,"empty","","Returns an empty set of flags.",3],[10,"all","","Returns the set containing all flags.",3],[10,"bits","","Returns the raw value of the flags currently stored.",3],[10,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",3],[10,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",3],[10,"is_empty","","Returns `true` if no flags are currently stored.",3],[10,"is_all","","Returns `true` if all flags are currently set.",3],[10,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",3],[10,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",3],[10,"insert","","Inserts the specified flags in-place.",3],[10,"remove","","Removes the specified flags in-place.",3],[10,"bitor","","Returns the union of the two sets of flags.",3],[10,"bitand","","Returns the intersection between the two sets of flags.",3],[10,"sub","","Returns the set difference of the two sets of flags.",3],[10,"not","","Returns the complement of this set of flags.",3],[10,"from_i64","","",1],[10,"from_u64","","",1],[10,"eq","","",1],[10,"ne","","",1],[10,"fmt","","",1],[10,"fmt","","",0],[10,"clone","","",0],[10,"eq","","",0],[10,"ne","","",0],[10,"eq","","",4],[10,"ne","","",4],[10,"drop","","",4],[10,"from_file","","Load file for use as a font, at ptsize size.",4],[10,"from_file_index","","Load file, face index, for use as a font, at ptsize size.",4],[10,"get_style","","Get font render style",4],[10,"set_style","","Set font render style.",4],[10,"get_outline","","Get font outline width.",4],[10,"set_outline","","Set font outline width.",4],[10,"get_hinting","","Get freetype hinter setting.",4],[10,"set_hinting","","Set freetype hinter setting.",4],[10,"get_kerning","","Get freetype kerning setting.",4],[10,"set_kerning","","Set freetype kerning setting.",4],[10,"height","","Get font maximum total height.",4],[10,"ascent","","Get font highest ascent (height above base).",4],[10,"descent","","Get font lowest descent (height below base).",4],[10,"line_skip","","Get font recommended line spacing.",4],[10,"faces","","Get the number of faces in a font.",4],[10,"face_is_fixed_width","","Get whether font is monospaced or not.",4],[10,"face_family_name","","Get current font face family name string.",4],[10,"face_style_name","","Get current font face style name string.",4],[10,"index_of_char","","Get individual font glyph availability.",4],[10,"metrics_of_char","","Get individual font glyph metrics.",4],[10,"size_of_bytes","","Get size of LATIN1 text string as would be rendered.",4],[10,"size_of_str","","Get size of UTF8 text string as would be rendered.",4],[10,"render_bytes_solid","","Draw LATIN1 text in solid mode.",4],[10,"render_str_solid","","Draw UTF8 text in solid mode.",4],[10,"render_char_solid","","Draw a UNICODE glyph in solid mode.",4],[10,"render_bytes_shaded","","Draw LATIN1 text in shaded mode.",4],[10,"render_str_shaded","","Draw UTF8 text in shaded mode.",4],[10,"render_char_shaded","","Draw a UNICODE glyph in shaded mode.",4],[10,"render_bytes_blended","","Draw LATIN1 text in blended mode.",4],[10,"render_str_blended","","Draw UTF8 text in blended mode.",4],[10,"render_char_blended","","Draw a UNICODE glyph in blended mode.",4],[10,"load_font","sdl2::rwops","",5],[10,"load_font_index","","",5]],"paths":[[1,"GlyphMetrics"],[2,"Hinting"],[6,"LoaderRWops"],[1,"FontStyle"],[1,"Font"],[1,"RWops"]]};
initSearch(searchIndex);
